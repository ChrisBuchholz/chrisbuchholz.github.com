variables:
  NAME: chrisbuchholz-me
  DOMAIN: chrisbuchholz.me
  DEPLOY_IMAGE: chrisbuchholz/gcloud-kubectl-helm
  DOCKER_REGISTRY: registry.gitlab.com/chrisbuchholz/chrisbuchholz.me
  DOCKER_DRIVER: overlay
  CHART_DIR: chart/$NAME
  GCLOUD_CLUSTER: schiaparelli
  GCLOUD_ZONE: europe-west1-b
  GCLOUD_PROJECT: schiaparelli-01
  HASH: $CI_COMMIT_SHA

.shared_hidden_key: &deploy_before_script
  before_script:
    - apk add --update git
    - export HASH=$(git rev-parse --short=8 $CI_COMMIT_SHA)
    - echo $K8S_CREDENTIALS | base64 -d > k8s_credentials
    - gcloud auth activate-service-account --key-file k8s_credentials
    - gcloud container clusters get-credentials $GCLOUD_CLUSTER --zone $GCLOUD_ZONE --project $GCLOUD_PROJECT 
    - rm k8s_credentials
    - kubectl cluster-info &> /dev/null # needed or else the access_token for the cluster is not created
    - helm init --client-only

stages:
  - build
  - review
  - staging
  - production

dockerize branch:
  stage: build
  image: docker:latest
  only:
    - branches
  services: 
    - docker:dind
  before_script:
    - apk add --update git
    - export HASH=$(git rev-parse --short=8 $CI_COMMIT_SHA)
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker build -t $DOCKER_REGISTRY:$HASH .
    - docker tag $DOCKER_REGISTRY:$HASH $DOCKER_REGISTRY:latest 
    - docker push $DOCKER_REGISTRY:$HASH
    - docker push $DOCKER_REGISTRY:latest

docker tag:
  stage: build
  image: docker:latest
  only:
    - tags
  services: 
    - docker:dind
  before_script:
    - apk add --update git
    - export HASH=$(git rev-parse --short=8 $CI_COMMIT_SHA)
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
    - docker pull $DOCKER_REGISTRY:$HASH
    - docker tag $DOCKER_REGISTRY:$HASH $DOCKER_REGISTRY:$CI_COMMIT_TAG
    - docker tag $DOCKER_REGISTRY:$CI_COMMIT_TAG $DOCKER_REGISTRY:latest
    - docker push $DOCKER_REGISTRY:$CI_COMMIT_TAG
    - docker push $DOCKER_REGISTRY:latest

deploy review:
  stage: review
  image: $DEPLOY_IMAGE
  only:
    - branches
  except:
    - master
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    url: http://review.$DOMAIN/$CI_COMMIT_SHA
    on_stop: stop review
  <<: *deploy_before_script
  script:
    - helm upgrade -i $NAME-review-$HASH --set image.tag=$HASH,ingress.hosts="{review.$DOMAIN}",ingress.path=$HASH,ingress.basicAuth.secret=default-basic-auth,ingress.tlsSecretName=review-$NAME-tls,ingress.tls=false $CHART_DIR

stop review:
  stage: review
  image: $DEPLOY_IMAGE
  when: manual
  only:
    - branches
  except:
    - master
  variables:
    GIT_STRATEGY: none
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  <<: *deploy_before_script
  script:
    - helm delete --purge $NAME-review-$HASH

deploy staging:
  stage: staging
  image: $DEPLOY_IMAGE
  only:
    - master
  environment:
    name: staging
    url: https://staging.$DOMAIN/
  <<: *deploy_before_script
  script:
    - helm upgrade -i $NAME-staging --set image.tag=$HASH,ingress.hosts="{staging.$DOMAIN}",ingress.basicAuth.secret=default-basic-auth,ingress.tlsSecretName=staging-$NAME-tls $CHART_DIR

deploy production:
  stage: production
  image: $DEPLOY_IMAGE
  when: manual
  only:
    - tags
  environment:
    name: production
    url: https://$DOMAIN/
  <<: *deploy_before_script
  script:
    - helm upgrade -i $NAME --set image.tag=$CI_COMMIT_TAG $CHART_DIR
